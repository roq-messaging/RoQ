#!/bin/sh

# Get lsb functions
. /lib/lsb/init-functions

ROQ={{ roq_path }}
GCM_PIDFILE=/var/run/roqGCM.pid
GCM_LOGFILE=/var/log/roqGCM.log
GCM_CONFIG=/root/.roq/GCM.properties

# Check roq is present
if [ ! -x $ROQ ]; then
	log_failure_msg "$ROQ not present"
	exit 1
fi

fail_unless_root() {
	if [ "$(id -u)" != '0' ]; then
		log_failure_msg "ROQ GCM must be run as root"
		exit 1
	fi
}

fail_unless_root

case "$1" in
	start)
		java -Djava.library.path=/usr/local/lib -cp \
		$ROQ/roq-management/target/roq-management-1.0-SNAPSHOT-jar-with-dependencies.jar \
		org.roqmessaging.management.launcher.GlobalConfigurationLauncher $GCM_CONFIG > $GCM_LOGFILE 2>&1 &

		PID=$!

		log_begin_msg "GCM Started [$PID]"

		echo $PID > $GCM_PIDFILE
		;;

	stop)
        fail_unless_root
		if [ -f $GCM_PIDFILE ]; then
	        PID=`cat $GCM_PIDFILE`
	        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
	            log_begin_msg "Not running (process dead but pidfile exists)"
	            exit 1
	        else
	            PID=`cat $GCM_PIDFILE`
	            log_begin_msg "Stopping ROQ GCM"
	            start-stop-daemon --stop --pidfile "$GCM_PIDFILE"
	            log_begin_msg "Stopped [$PID]"
	            log_end_msg $?
	            exit 0
	        fi
	    else
	        log_begin_msg "Not running (pid not found)"
	        exit 3
	    fi
		;;

	status)
		status_of_proc -p "$GCM_PIDFILE" "GCM" GCM
		;;
	restart)
		$0 stop
		sleep 10
		$0 start
		;;
	*)
		echo "Usage: $0 {start|stop|status|restart}"
		exit 1
		;;
esac

exit 0